--- CMakeLists.txt.orig	2013-12-20 19:15:42.000000000 +0400
+++ CMakeLists.txt	2013-12-20 19:49:35.492800000 +0400
@@ -77,37 +77,42 @@
 
 # Find Boost
 if (NOT OGRE_BUILD_PLATFORM_IPHONE)
-    if (WIN32 OR APPLE)
-        set(Boost_USE_STATIC_LIBS TRUE)
-    else ()
-        # Statically linking boost to a dynamic Ogre build doesn't work on Linux 64bit
-        set(Boost_USE_STATIC_LIBS ${OGRE_STATIC})
-    endif ()
-    if (MINGW)
-        # this is probably a bug in CMake: the boost find module tries to look for
-        # boost libraries with name libboost_*, but CMake already prefixes library
-        # search names with "lib". This is the workaround.
-        set(CMAKE_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES} "")
-    endif ()
-    set(Boost_ADDITIONAL_VERSIONS "1.54" "1.54.0" "1.53" "1.53.0" "1.52" "1.52.0" "1.51" "1.51.0" "1.50" "1.50.0" "1.49" "1.49.0" "1.48" "1.48.0" "1.44" "1.44.0" "1.42" "1.42.0" "1.41.0" "1.41" "1.40.0" "1.40" "1.39.0" "1.39" "1.38.0" "1.38" "1.37.0" "1.37" )
-    # Components that need linking (NB does not include header-only components like bind)
-    set(OGRE_BOOST_COMPONENTS thread date_time)
-    find_package(Boost COMPONENTS ${OGRE_BOOST_COMPONENTS} QUIET)
-    if (NOT Boost_FOUND)
-        # Try again with the other type of libs
-        set(Boost_USE_STATIC_LIBS NOT ${Boost_USE_STATIC_LIBS})
-        find_package(Boost COMPONENTS ${OGRE_BOOST_COMPONENTS} QUIET)
-    endif()
-	if (Boost_FOUND AND WIN32 AND Boost_USE_STATIC_LIBS)
-		if(Boost_VERSION GREATER 104700)
-			set(OGRE_BOOST_COMPONENTS thread date_time system)
+	# Prefer static linking in all cases
+	if (WIN32 OR APPLE)
+		set(Boost_USE_STATIC_LIBS TRUE)
+	else ()
+		# Statically linking boost to a dynamic Ogre build doesn't work on Linux 64bit
+		set(Boost_USE_STATIC_LIBS ${OGRE_STATIC})
+	endif ()
+	if (APPLE AND OGRE_BUILD_PLATFORM_APPLE_IOS)
+		set(Boost_USE_MULTITHREADED OFF)
+	endif()
+	set(Boost_ADDITIONAL_VERSIONS "1.55" "1.55.0" "1.54" "1.54.0" "1.53" "1.53.0" "1.52" "1.52.0" "1.51" "1.51.0" "1.50" "1.50.0" "1.49" "1.49.0" "1.48" "1.48.0" "1.47" "1.47.0" "1.46" "1.46.0" "1.45" "1.45.0" "1.44" "1.44.0" "1.42" "1.42.0" "1.41.0" "1.41" "1.40.0" "1.40")
+	# Components that need linking (NB does not include header-only components like bind)
+	set(OGRE_BOOST_COMPONENTS thread date_time)
+	find_package(Boost COMPONENTS ${OGRE_BOOST_COMPONENTS} QUIET)
+	if (NOT Boost_FOUND)
+		# Try again with the other type of libs
+		if(Boost_USE_STATIC_LIBS)
+			set(Boost_USE_STATIC_LIBS OFF)
+		else()
+			set(Boost_USE_STATIC_LIBS ON)
 		endif()
-		if(Boost_VERSION GREATER 104900)
+		find_package(Boost COMPONENTS ${OGRE_BOOST_COMPONENTS} QUIET)
+	endif()
+
+	if(Boost_FOUND AND Boost_VERSION GREATER 104900)
+		if(Boost_VERSION GREATER 105300)
+			set(OGRE_BOOST_COMPONENTS thread date_time system atomic chrono)
+		else()
 			set(OGRE_BOOST_COMPONENTS thread date_time system chrono)
 		endif()
 		find_package(Boost COMPONENTS ${OGRE_BOOST_COMPONENTS} QUIET)
 	endif()
-    find_package(Boost QUIET)
+
+	if(Boost_FOUND AND NOT WIN32)
+	  list(REMOVE_DUPLICATES Boost_LIBRARIES)
+	endif()
 
     # Set up referencing of Boost
     include_directories(${Boost_INCLUDE_DIR})
