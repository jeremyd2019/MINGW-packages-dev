--- src/AssimpLoader.cpp.orig	2013-12-20 19:15:42.000000000 +0400
+++ src/AssimpLoader.cpp	2013-12-20 19:44:40.543600000 +0400
@@ -140,7 +140,11 @@
 
     if(mBonesByName.size())
     {
+#if (OGRE_VERSION < ((1 << 16) | (9 << 8) | 0))
         mSkeleton = Ogre::SkeletonManager::getSingleton().create("conversion", Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+#else
+        mSkeleton = Ogre::SkeletonManager::getSingleton().create("conversion", Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME).staticCast<Ogre::Skeleton>();
+#endif
 
         msBoneCount = 0;
         createBonesFromNode(scene, scene->mRootNode);
@@ -228,7 +232,11 @@
             Ogre::LodConfig lodConfig;
             lodConfig.levels.clear();
             lodConfig.mesh = mMesh->clone(mMesh->getName());
+#if (OGRE_VERSION < ((1 << 16) | (9 << 8) | 0))
             lodConfig.strategy = Ogre::DistanceLodStrategy::getSingletonPtr();
+#else
+            lodConfig.strategy = Ogre::DistanceLodBoxStrategy::getSingletonPtr();
+#endif
 
             Ogre::LodLevel lodLevel;
             lodLevel.reductionMethod = Ogre::LodLevel::VRM_PROPORTIONAL;
@@ -284,7 +292,11 @@
                 Ogre::String matName(sm->getMaterialName());
                 if (std::find(exportedNames.begin(), exportedNames.end(), matName) == exportedNames.end())
                 {
+#if (OGRE_VERSION < ((1 << 16) | (9 << 8) | 0))
                     Ogre::MaterialPtr materialPtr = mmptr->getByName(matName);
+#else
+                    Ogre::MaterialPtr materialPtr = mmptr->getByName(matName).staticCast<Ogre::Material>();
+#endif
                     ms.queueForExport(materialPtr);
                     exportedNames.push_back(matName);
                 }
@@ -313,7 +325,11 @@
     mBonesByName.clear();
     mBoneNodesByName.clear();
     boneMap.clear();
+#if (OGRE_VERSION < ((1 << 16) | (9 << 8) | 0))
     mSkeleton = Ogre::SkeletonPtr(NULL);
+#else
+    mSkeleton = Ogre::SkeletonPtr();
+#endif
     mCustomAnimationName = "";
     // etc...
 
@@ -897,7 +913,11 @@
     Ogre::String materialName = mBasename + "#" + Ogre::StringConverter::toString(index);
     if(matMgr->resourceExists(materialName))
     {
+#if (OGRE_VERSION < ((1 << 16) | (9 << 8) | 0))
         Ogre::MaterialPtr matPtr = matMgr->getByName(materialName);
+#else
+        Ogre::MaterialPtr matPtr = matMgr->getByName(materialName).staticCast<Ogre::Material>();
+#endif
         if(matPtr->isLoaded())
         {
             return matPtr;
@@ -997,7 +1017,11 @@
     Ogre::DataStreamPtr stream(OGRE_NEW Ogre::MemoryDataStream(const_cast<void*>(static_cast<const void*>(code.c_str())),
                                                 code.length() * sizeof(char), false));
     Ogre::MaterialManager::getSingleton().parseScript(stream, Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME);
+#if (OGRE_VERSION < ((1 << 16) | (9 << 8) | 0))
     Ogre::MaterialPtr omat = Ogre::MaterialManager::getSingleton().getByName(materialName);
+#else
+    Ogre::MaterialPtr omat = Ogre::MaterialManager::getSingleton().getByName(materialName).staticCast<Ogre::Material>();
+#endif
     //omat->compile(false);
     //omat->load();
 
@@ -1049,7 +1073,11 @@
     }
 
     Ogre::ResourceManager::ResourceCreateOrRetrieveResult status = omatMgr->createOrRetrieve(ReplaceSpaces(basename), Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME, true);
+#if (OGRE_VERSION < ((1 << 16) | (9 << 8) | 0))
     Ogre::MaterialPtr omat = status.first;
+#else
+    Ogre::MaterialPtr omat = status.first.staticCast<Ogre::Material>();
+#endif
     if (!status.second)
         return omat;
 
